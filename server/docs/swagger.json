{
  "openapi": "3.0.0",
  "info": {
    "title": "Edore Luxe Webshop API",
    "version": "1.0.0",
    "description": "API documentation for the Edore Luxe Webshop backend."
  },
  "servers": [
    { "url": "http://localhost:5000/api" }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "email": { "type": "string" },
                  "password": { "type": "string" }
                },
                "required": ["name", "email", "password"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "User registered" },
          "400": { "description": "Validation error or email in use" }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string" },
                  "password": { "type": "string" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Login successful" },
          "400": { "description": "Invalid credentials" }
        }
      }
    },
    "/products": {
      "get": {
        "summary": "Get all products",
        "responses": {
          "200": { "description": "List of products" }
        }
      },
      "post": {
        "summary": "Create a new product (admin)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "price": { "type": "number" },
                  "description": { "type": "string" },
                  "category": { "type": "string" },
                  "stock": { "type": "integer" }
                },
                "required": ["name", "price"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Product created" },
          "403": { "description": "Admin access required" }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "Get product by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Product details" },
          "404": { "description": "Product not found" }
        }
      },
      "put": {
        "summary": "Update product (admin)",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "price": { "type": "number" },
                  "description": { "type": "string" },
                  "category": { "type": "string" },
                  "stock": { "type": "integer" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Product updated" },
          "403": { "description": "Admin access required" },
          "404": { "description": "Product not found" }
        }
      },
      "delete": {
        "summary": "Delete product (admin)",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Product deleted" },
          "403": { "description": "Admin access required" },
          "404": { "description": "Product not found" }
        }
      }
    },
    "/cart": {
      "get": {
        "summary": "Get current user's cart",
        "responses": {
          "200": { "description": "Cart details" },
          "401": { "description": "Unauthorized" }
        }
      },
      "post": {
        "summary": "Add item to cart",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": { "type": "string" },
                  "quantity": { "type": "integer" }
                },
                "required": ["productId", "quantity"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Item added to cart" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/cart/item/{itemId}": {
      "put": {
        "summary": "Update quantity of a cart item",
        "parameters": [
          { "name": "itemId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": { "type": "integer" }
                },
                "required": ["quantity"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Cart item updated" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Cart item not found" }
        }
      },
      "delete": {
        "summary": "Remove item from cart",
        "parameters": [
          { "name": "itemId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Cart item removed" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Cart item not found" }
        }
      }
    },
    "/cart/clear": {
      "post": {
        "summary": "Clear the user's cart",
        "responses": {
          "200": { "description": "Cart cleared" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/orders": {
      "get": {
        "summary": "Get current user's orders",
        "responses": {
          "200": { "description": "List of user's orders" },
          "401": { "description": "Unauthorized" }
        }
      },
      "post": {
        "summary": "Place a new order from cart",
        "responses": {
          "201": { "description": "Order placed" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "summary": "Get order by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Order details" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Order not found" }
        }
      }
    },
    "/wishlist": {
      "get": {
        "summary": "Get current user's wishlist",
        "responses": {
          "200": { "description": "Wishlist details" },
          "401": { "description": "Unauthorized" }
        }
      },
      "post": {
        "summary": "Add product to wishlist",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": { "type": "string" }
                },
                "required": ["productId"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Product added to wishlist" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/wishlist/{productId}": {
      "delete": {
        "summary": "Remove product from wishlist",
        "parameters": [
          { "name": "productId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Product removed from wishlist" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Product not found in wishlist" }
        }
      }
    },
    "/upload/product": {
      "post": {
        "summary": "Upload a product image (admin)",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": { "type": "string", "format": "binary" }
                },
                "required": ["image"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Image uploaded" },
          "403": { "description": "Admin access required" }
        }
      }
    },
    "/upload/avatar": {
      "post": {
        "summary": "Upload a user avatar",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": { "type": "string", "format": "binary" }
                },
                "required": ["avatar"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Avatar uploaded" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/payment/create-intent": {
      "post": {
        "summary": "Create a Stripe payment intent",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": { "type": "number" },
                  "currency": { "type": "string" },
                  "orderId": { "type": "string" }
                },
                "required": ["amount"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Payment intent created" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/payment/webhook": {
      "post": {
        "summary": "Stripe webhook endpoint",
        "responses": {
          "200": { "description": "Webhook received" }
        }
      }
    },
    "/email/send-verification": {
      "post": {
        "summary": "Send verification email",
        "responses": {
          "200": { "description": "Verification email sent" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/email/verify": {
      "get": {
        "summary": "Verify email via token",
        "parameters": [
          { "name": "token", "in": "query", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Email verified" },
          "400": { "description": "Invalid or expired token" }
        }
      }
    },
    "/email/send-reset": {
      "post": {
        "summary": "Send password reset email",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string" }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Password reset email sent" },
          "404": { "description": "User not found" }
        }
      }
    },
    "/email/reset": {
      "post": {
        "summary": "Reset password via token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": { "type": "string" },
                  "newPassword": { "type": "string" }
                },
                "required": ["token", "newPassword"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Password reset successful" },
          "400": { "description": "Invalid or expired token" }
        }
      }
    }
  }
}
